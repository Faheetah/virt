<domain type='kvm'>
  <%# this needs to also be domain.id, because domain.name will not be unique to libvirt %>
  <name><%= domain.id %></name>
  <uuid><%= domain.id %></uuid>
  <memory unit='B'><%= domain.memory_bytes %></memory>
  <currentMemory unit='B'><%= domain.memory_bytes %></currentMemory>
  <vcpu placement='static'><%= domain.vcpus %></vcpu>
  <os>
    <type arch='x86_64'>hvm</type>
    <boot dev='hd'/>
    <smbios mode="sysinfo"/>
  </os>
  <sysinfo type="smbios">
    <system>
      <%#
        IP needs to map to the hypervisor's metadata proxy, this in the future should get
        authenticated by the network configuration, and the hypervisor handle it with iptables forward

        This can change if the host uses something like OVS where a whole network can be created.
        Right now, it will get the IP from DHCP.
      %>
      <entry name="serial">ds=nocloud-net;s=http://10.0.0.2:4000/ci/<%= domain.id %>/</entry>
    </system>
  </sysinfo>
  <features>
    <acpi/>
    <apic/>
    <vmport state='off'/>
  </features>
  <devices>
    <graphics type='vnc' port='5900' autoport='yes'/>
    <emulator>/usr/bin/kvm-spice</emulator>
    <%= for disk <- domain.domain_disks do %>
    <disk type='file' device='disk'>
      <driver name='qemu' type='qcow2'/>
      <source file='<%= disk.volume.key %>'/>
      <target dev='<%= disk.device %>' bus='ide'/>
    </disk>
    <% end %>

    <serial type='pty'>
      <target port='0'/>
    </serial>

    <console type='pty'>
      <target type='serial' port='0'/>
    </console>

    <%= for interface <- domain.domain_interfaces do %>
    <%= if interface.type == "bridge" do %>
    <interface type='<%= interface.type %>'>
      <mac address='<%= interface.mac %>'/>
      <source bridge='<%= interface.bridge %>'/>
    </interface>
    <% end %>
    <% end %>
  </devices>
</domain>
